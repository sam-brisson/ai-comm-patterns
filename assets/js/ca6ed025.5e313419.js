"use strict";(self.webpackChunkai_comm_patterns=self.webpackChunkai_comm_patterns||[]).push([[4103],{6882:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>r,toc:()=>m});const r=JSON.parse('{"id":"experimentation/start","title":"start","description":"","source":"@site/docs/experimentation/start.md","sourceDirName":"experimentation","slug":"/experimentation/start","permalink":"/ai-comm-patterns/docs/experimentation/start","draft":false,"unlisted":false,"editUrl":"https://github.com/sam-brisson/ai-comm-patterns/tree/main/docs/experimentation/start.md","tags":[],"version":"current","frontMatter":{},"sidebar":"ExperimenationSidebar","previous":{"title":"Experimentation Intro","permalink":"/ai-comm-patterns/docs/experimentation/intro"}}');var o=n(4848),i=n(8453);const s={},a=void 0,c={},m=[];function p(t){return(0,o.jsx)(o.Fragment,{})}function u(t={}){const{wrapper:e}={...(0,i.R)(),...t.components};return e?(0,o.jsx)(e,{...t,children:(0,o.jsx)(p,{...t})}):p()}},8453:(t,e,n)=>{n.d(e,{R:()=>s,x:()=>a});var r=n(6540);const o={},i=r.createContext(o);function s(t){const e=r.useContext(i);return r.useMemo(function(){return"function"==typeof t?t(e):{...e,...t}},[e,t])}function a(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(o):t.components||o:s(t.components),r.createElement(i.Provider,{value:e},t.children)}}}]);